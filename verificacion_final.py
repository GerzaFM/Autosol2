#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import sys
sys.path.append('src')
sys.path.append('src/buscarapp')

try:
    from src.bd.models import OrdenCompra, Factura
    
    def verificacion_final():
        print("=== VERIFICACI√ìN FINAL DEL SISTEMA ===")
        
        # Contar √≥rdenes totales
        total_ordenes = OrdenCompra.select().count()
        print(f"üìä Total de √≥rdenes: {total_ordenes}")
        
        # Verificar asociaciones
        ordenes_asociadas = OrdenCompra.select().where(OrdenCompra.factura_id.is_null(False)).count()
        print(f"üîó √ìrdenes asociadas: {ordenes_asociadas}")
        print(f"üìä Porcentaje de asociaci√≥n: {(ordenes_asociadas/total_ordenes*100):.1f}%")
        
        # Verificar espacios en importe_en_letras
        ordenes_con_espacios = 0
        ordenes_sin_espacios = 0
        
        for orden in OrdenCompra.select():
            if orden.importe_en_letras:
                if ' ' in orden.importe_en_letras:
                    ordenes_con_espacios += 1
                else:
                    ordenes_sin_espacios += 1
        
        print(f"‚úÖ √ìrdenes con espacios en importe_en_letras: {ordenes_con_espacios}")
        print(f"‚ùå √ìrdenes sin espacios en importe_en_letras: {ordenes_sin_espacios}")
        
        print("\n=== DETALLES DE √ìRDENES ===")
        for orden in OrdenCompra.select():
            asociada = "‚úÖ" if orden.factura_id else "‚ùå"
            espacios = "‚úÖ" if (orden.importe_en_letras and ' ' in orden.importe_en_letras) else "‚ùå"
            proveedor = orden.nombre[:30] + "..." if len(orden.nombre) > 30 else orden.nombre
            importe_display = (orden.importe_en_letras[:40] + "...") if orden.importe_en_letras and len(orden.importe_en_letras) > 40 else orden.importe_en_letras
            
            print(f"ID {orden.id}: {proveedor}")
            print(f"   Asociada: {asociada} | Espacios: {espacios}")
            print(f"   Importe: {importe_display}")
            print()
        
        print("=== RESUMEN GENERAL ===")
        if ordenes_sin_espacios == 0:
            print("‚úÖ PROBLEMA DE ESPACIOS RESUELTO: Todas las √≥rdenes tienen espacios correctos")
        else:
            print(f"‚ö†Ô∏è  PENDIENTE: {ordenes_sin_espacios} √≥rdenes a√∫n sin espacios")
            
        if ordenes_asociadas >= total_ordenes * 0.8:  # 80% o m√°s
            print("‚úÖ ASOCIACIONES BUENAS: M√°s del 80% de √≥rdenes est√°n asociadas")
        else:
            print(f"‚ö†Ô∏è  ASOCIACIONES PENDIENTES: Solo {(ordenes_asociadas/total_ordenes*100):.1f}% asociadas")

    if __name__ == "__main__":
        verificacion_final()

except ImportError as e:
    print(f"‚ùå Error al importar: {e}")
except Exception as e:
    print(f"‚ùå Error: {e}")
