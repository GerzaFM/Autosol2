"""
Test espec√≠fico para probar la funcionalidad de b√∫squeda en la aplicaci√≥n completa
"""
import sys
import os

# Agregar paths
current_dir = os.path.dirname(os.path.abspath(__file__))
sys.path.insert(0, os.path.join(current_dir, 'src'))

def test_buscar_app_search():
    """Test la aplicaci√≥n completa y su funcionalidad de b√∫squeda"""
    import ttkbootstrap as ttk
    
    root = ttk.Window("Test BuscarApp - Funcionalidad de B√∫squeda", themename="litera")
    root.geometry("1000x700")
    
    try:
        from buscarapp.buscar_app_refactored import BuscarAppRefactored
        
        print("‚úÖ Importando BuscarAppRefactored...")
        app = BuscarAppRefactored(root)
        
        print("‚úÖ Aplicaci√≥n creada correctamente")
        
        # Verificar si search_frame existe y tiene los botones
        if hasattr(app, 'search_frame'):
            print("‚úÖ search_frame encontrado")
            
            if hasattr(app.search_frame, 'buscar_btn'):
                print("‚úÖ Bot√≥n buscar encontrado")
                
                # Verificar el comando del bot√≥n
                print(f"üìã Comando del bot√≥n buscar: {app.search_frame.buscar_btn['command']}")
            else:
                print("‚ùå Bot√≥n buscar NO encontrado")
                
            if hasattr(app.search_frame, 'limpiar_btn'):
                print("‚úÖ Bot√≥n limpiar encontrado")
                print(f"üìã Comando del bot√≥n limpiar: {app.search_frame.limpiar_btn['command']}")
            else:
                print("‚ùå Bot√≥n limpiar NO encontrado")
        else:
            print("‚ùå search_frame NO encontrado")
        
        # Verificar callback
        if hasattr(app, '_on_search'):
            print("‚úÖ M√©todo _on_search encontrado")
        else:
            print("‚ùå M√©todo _on_search NO encontrado")
        
        # Test manual del callback
        print("\nüß™ Test manual del callback de b√∫squeda...")
        try:
            test_filters = {
                'fecha_inicial': '',
                'fecha_final': '',
                'tipo_filtro': '',
                'proveedor_filtro': '',
                'no_vale_filtro': '',
                'solo_cargado': False,
                'solo_pagado': False,
                'texto_busqueda': ''
            }
            
            app._on_search(test_filters)
            print("‚úÖ Callback _on_search ejecutado sin errores")
            
        except Exception as e:
            print(f"‚ùå Error en callback _on_search: {e}")
            import traceback
            traceback.print_exc()
        
        print("\nüéØ La aplicaci√≥n est√° lista. Prueba los botones de b√∫squeda manualmente")
        print("   - Presiona 'Buscar' para probar la funcionalidad")
        print("   - Presiona 'Limpiar Filtros' para probar el limpiar")
        print("   - Cierra la ventana cuando termines")
        
        root.mainloop()
        
    except Exception as e:
        print(f"‚ùå Error en test de BuscarApp: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    print("üß™ TEST DE FUNCIONALIDAD DE B√öSQUEDA - BUSCAR APP")
    print("=" * 60)
    test_buscar_app_search()
